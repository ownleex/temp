"""
Django settings for django_user_handler project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
from utils.vault_utils import get_vault_secrets
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

vault_secrets = get_vault_secrets()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = vault_secrets['django_secret_key']
DOMAIN_NAME = os.getenv("DOMAIN_NAME", "localhost")
PORT_NUM = os.getenv("PORT_NUM", "4343")
SOCIAL_AUTH_42_KEY = vault_secrets['auth_42_key']
SOCIAL_AUTH_42_SECRET = vault_secrets['auth_42_secret']
SOCIAL_AUTH_REDIRECT_URI = f"https://{DOMAIN_NAME}:{PORT_NUM}/register/42/complete"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Apps tierces
    "rest_framework",
    "corsheaders",
    "rest_framework_simplejwt",
    "rest_framework_simplejwt.token_blacklist",
    "django_otp",
    "django_otp.plugins.otp_totp",
    "social_django",
    # App locale
    "core",
    "shared_models",
]


MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "core.middleware.XSSProtectionMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "core.middleware.UserActivityMiddleware",
    "core.middleware.SetUserOnlineMiddleware",
]

ROOT_URLCONF = "django_user_handler.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = ("django.contrib.auth.backends.ModelBackend",)

WSGI_APPLICATION = "django_user_handler.wsgi.application"

CORS_ALLOWED_ORIGINS = [
    f"https://{DOMAIN_NAME}:{PORT_NUM}",
]

CSRF_TRUSTED_ORIGINS = [
    f"https://{DOMAIN_NAME}:{PORT_NUM}",
    f"https://{DOMAIN_NAME}",
]

ALLOWED_HOSTS = [DOMAIN_NAME, 'localhost']

MEDIA_URL = f"https://{DOMAIN_NAME}:{PORT_NUM}/media/"
MEDIA_ROOT = BASE_DIR / "media"

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_ALL_ORIGINS = False  # À désactiver en production
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-requested-with",
]

# Autoriser les méthodes HTTP
CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]


REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "EXCEPTION_HANDLER": "core.exceptions.custom_exception_handler",
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(seconds=60),  # Durée de vie de l’access token
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),  # Durée de vie du refresh token
    "BLACKLIST_AFTER_ROTATION": True,  # Active le blacklisting après rotation
    "TOKEN_BACKEND": "rest_framework_simplejwt.token_blacklist.backends.BlacklistBackend",  # Backend pour blacklist
}

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': vault_secrets['postgres_database_name'],            # Nom de ta base de données
        'USER': vault_secrets['postgres_user'],          # Nom d'utilisateur PostgreSQL
        'PASSWORD': vault_secrets['postgres_password'],  # Mot de passe PostgreSQL
        'HOST': vault_secrets['postgres_host'],          # Si tu es en local, sinon 'db' avec Docker
        'PORT': vault_secrets['postgres_port'],          # Port par défaut de PostgreSQL
        'CONN_MAX_AGE':None,
        'CONN_HEALTH_CHECKS':True,
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "/static/users/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/users/admin/"
LOGIN_URL = "/login"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

SESSION_ENGINE = (
    "django.contrib.sessions.backends.db"  # stocker les sessions utilisateur
)

SESSION_COOKIE_SECURE = True  # HTTPS uniquement (activé en production)
SESSION_COOKIE_HTTPONLY = True  # Empêche l'accès JavaScript
SESSION_COOKIE_SAMESITE = "Lax"  # Protection CSRF
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # Expirer à la fermeture du navigateur
